in_source_text: |-
  section .text
      mov #INT .read_char

      .print_сhar: movo !1 *Question_Position
          add #Question_Position 1
          cmp *Question_Position 0
          jz .input
          jmp .print_сhar

      .input: ei
      .loop: cmp #Char #Stop
          jz .eof
          cmp #Current_len #Buffer_len
          jz .print_answer
          jmp .loop
      .eof: mov *Current_addr 0
          jmp .print_answer

      .read_char: movi #Char !0
          mov *Current_addr #Char
          add #Current_addr 1
          add #Current_len 1
          iret

      .print_answer: di
          
      .print_сhar1: movo !1 *Answer_Position
          add #Answer_Position 1
          cmp *Answer_Position 0
          jz .output
          jmp .print_сhar1
          
      .output: mov #Current_addr #Start_Buffer
      .print_string: movo !1 *Current_addr
          add #Current_addr 1
          cmp *Current_addr 0
          jz .exit
          jmp .print_string
      .exit: hlt

in_source_data: |-
  section .data
      Question: "What`s your name?"
      Question_Position: Question

      Stop: 10
      Char: 0
      Buffer_len: 20
      Current_len: 0
      Buffer: buf 20 0
      Start_Buffer: Buffer
      Current_addr: Buffer

      Answer: "Hello "
      Answer_Position: Answer

in_stdin: |-
  [(10, 'P'), (20, 'r'), (30, 'o'), (60, 'k'), (80, 'o'), (110, 'p'), (130, '\n')]
out_code: |
  0 0a20000000100000000e mov #1 14
  1 0c300000001400000014 movo !1 *20
  2 01200000014000000001 add #20 1
  3 09400000014000000000 cmp *20 0
  4 0e000000006000000000 jz 6
  5 0d000000001000000000 jmp 1
  6 14000000000000000000 ei
  7 09200000016200000015 cmp #22 #21
  8 0e00000000c000000000 jz 12
  9 09200000018200000017 cmp #24 #23
  10 0e000000013000000000 jz 19
  11 0d000000007000000000 jmp 7
  12 0a40000002e000000000 mov *46 0
  13 0d000000013000000000 jmp 19
  14 0b200000016300000000 movi #22 !0
  15 0a40000002e200000016 mov *46 #22
  16 0120000002e000000001 add #46 1
  17 01200000018000000001 add #24 1
  18 12000000000000000000 iret
  19 13000000000000000000 di
  20 0c300000001400000036 movo !1 *54
  21 01200000036000000001 add #54 1
  22 09400000036000000000 cmp *54 0
  23 0e000000019000000000 jz 25
  24 0d000000014000000000 jmp 20
  25 0a20000002e20000002d mov #46 #45
  26 0c30000000140000002e movo !1 *46
  27 0120000002e000000001 add #46 1
  28 0940000002e000000000 cmp *46 0
  29 0e00000001f000000000 jz 31
  30 0d00000001a000000000 jmp 26
  31 15000000000000000000 hlt

out_data: |
  0 00000000037000000000 55
  1 00000000000000000000 0
  2 00000000057000000000 87
  3 00000000068000000000 104
  4 00000000061000000000 97
  5 00000000074000000000 116
  6 00000000060000000000 96
  7 00000000073000000000 115
  8 00000000020000000000 32
  9 00000000079000000000 121
  10 0000000006f000000000 111
  11 00000000075000000000 117
  12 00000000072000000000 114
  13 00000000020000000000 32
  14 0000000006e000000000 110
  15 00000000061000000000 97
  16 0000000006d000000000 109
  17 00000000065000000000 101
  18 0000000003f000000000 63
  19 00000000000000000000 0
  20 00000000002000000000 2
  21 0000000000a000000000 10
  22 00000000000000000000 0
  23 00000000014000000000 20
  24 00000000000000000000 0
  25 00000000000000000000 0
  26 00000000000000000000 0
  27 00000000000000000000 0
  28 00000000000000000000 0
  29 00000000000000000000 0
  30 00000000000000000000 0
  31 00000000000000000000 0
  32 00000000000000000000 0
  33 00000000000000000000 0
  34 00000000000000000000 0
  35 00000000000000000000 0
  36 00000000000000000000 0
  37 00000000000000000000 0
  38 00000000000000000000 0
  39 00000000000000000000 0
  40 00000000000000000000 0
  41 00000000000000000000 0
  42 00000000000000000000 0
  43 00000000000000000000 0
  44 00000000000000000000 0
  45 00000000019000000000 25
  46 00000000019000000000 25
  47 00000000048000000000 72
  48 00000000065000000000 101
  49 0000000006c000000000 108
  50 0000000006c000000000 108
  51 0000000006f000000000 111
  52 00000000020000000000 32
  53 00000000000000000000 0
  54 0000000002f000000000 47

out_stdout: |
  source LoC: 45 code instr: 32
  ============================================================
  What`s your name?Hello Prokop

  instr_counter:  190 ticks: 552
out_log: |
  INFO    machine:command_cycle Tick: 0 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: nop
  INFO    machine:command_cycle Tick: 3 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: mov #1 14
  INFO    machine:wr_port       OUTPUT: [] <- W
  INFO    machine:command_cycle Tick: 5 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 9 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 12 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 14 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 16 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W'] <- h
  INFO    machine:command_cycle Tick: 18 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 22 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 25 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 27 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 29 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h'] <- a
  INFO    machine:command_cycle Tick: 31 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 35 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 38 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 40 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 42 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a'] <- t
  INFO    machine:command_cycle Tick: 44 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 48 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 51 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 53 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 55 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't'] <- `
  INFO    machine:command_cycle Tick: 57 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 61 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 64 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 66 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 68 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`'] <- s
  INFO    machine:command_cycle Tick: 70 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 74 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 77 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 79 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 81 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's'] <-  
  INFO    machine:command_cycle Tick: 83 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 87 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 90 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 92 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 94 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' '] <- y
  INFO    machine:command_cycle Tick: 96 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 100 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 103 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 105 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 107 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y'] <- o
  INFO    machine:command_cycle Tick: 109 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 113 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 116 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 118 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 120 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o'] <- u
  INFO    machine:command_cycle Tick: 122 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 126 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 129 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 131 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 133 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u'] <- r
  INFO    machine:command_cycle Tick: 135 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 139 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 142 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 144 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 146 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r'] <-  
  INFO    machine:command_cycle Tick: 148 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 152 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 155 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 157 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 159 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' '] <- n
  INFO    machine:command_cycle Tick: 161 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 165 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 168 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 170 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 172 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n'] <- a
  INFO    machine:command_cycle Tick: 174 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 178 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 181 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 183 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 185 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a'] <- m
  INFO    machine:command_cycle Tick: 187 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 191 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 194 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 196 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 198 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm'] <- e
  INFO    machine:command_cycle Tick: 200 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 204 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 207 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 209 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 211 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 1
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e'] <- ?
  INFO    machine:command_cycle Tick: 213 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *20
  INFO    machine:command_cycle Tick: 217 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 2, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #20 1
  INFO    machine:command_cycle Tick: 220 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 2, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: cmp *20 0
  INFO    machine:command_cycle Tick: 222 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 6, rst: 2, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 224 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: ei
  INFO    machine:rd_port       INPUT: P
  INFO    machine:command_cycle TRAP:Tick: 230 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 1 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 233 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 1 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 237 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 241 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 245 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: r
  INFO    machine:command_cycle TRAP:Tick: 251 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 254 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 258 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 262 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 266 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: o
  INFO    machine:command_cycle TRAP:Tick: 272 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 275 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 279 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 283 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 287 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: k
  INFO    machine:command_cycle TRAP:Tick: 293 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 296 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 300 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 304 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 308 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: o
  INFO    machine:command_cycle TRAP:Tick: 314 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 317 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 321 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 325 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 329 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: p
  INFO    machine:command_cycle TRAP:Tick: 335 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 338 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 342 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 346 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 2, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 350 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 3, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:rd_port       INPUT: \n
  INFO    machine:command_cycle TRAP:Tick: 356 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 15, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: movi #22 !0
  INFO    machine:command_cycle TRAP:Tick: 359 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 16, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: mov *46 #22
  INFO    machine:command_cycle TRAP:Tick: 363 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 17, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle TRAP:Tick: 367 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 18, rst: 0, rsp: 2045 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #24 1
  INFO    machine:command_cycle Tick: 371 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 7, rst: 1, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: iret
  INFO    machine:command_cycle Tick: 374 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 8, rst: 1, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: cmp #22 #21
  INFO    machine:command_cycle Tick: 376 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 12, rst: 1, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jz 12
  INFO    machine:command_cycle Tick: 379 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 13, rst: 1, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: mov *46 0
  INFO    machine:command_cycle Tick: 381 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 19, rst: 1, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jmp 19
  INFO    machine:command_cycle Tick: 383 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: di
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?'] <- H
  INFO    machine:command_cycle Tick: 385 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 389 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 392 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 394 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 24, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 396 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 20
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H'] <- e
  INFO    machine:command_cycle Tick: 398 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 402 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 405 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 407 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 24, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 409 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 20
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e'] <- l
  INFO    machine:command_cycle Tick: 411 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 415 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 418 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 420 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 24, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 422 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 20
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l'] <- l
  INFO    machine:command_cycle Tick: 424 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 428 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 431 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 433 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 24, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 435 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 20
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l'] <- o
  INFO    machine:command_cycle Tick: 437 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 441 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 444 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 446 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 24, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 448 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 20, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 20
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o'] <-  
  INFO    machine:command_cycle Tick: 450 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 21, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *54
  INFO    machine:command_cycle Tick: 454 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 22, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #54 1
  INFO    machine:command_cycle Tick: 457 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 23, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: cmp *54 0
  INFO    machine:command_cycle Tick: 459 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 25, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jz 25
  INFO    machine:command_cycle Tick: 462 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: mov #46 #45
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' '] <- P
  INFO    machine:command_cycle Tick: 464 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 468 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 471 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 473 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 475 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P'] <- r
  INFO    machine:command_cycle Tick: 477 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 481 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 484 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 486 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 488 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P', 'r'] <- o
  INFO    machine:command_cycle Tick: 490 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 494 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 497 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 499 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 501 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P', 'r', 'o'] <- k
  INFO    machine:command_cycle Tick: 503 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 507 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 510 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 512 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 514 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P', 'r', 'o', 'k'] <- o
  INFO    machine:command_cycle Tick: 516 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 520 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 523 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 525 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 527 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P', 'r', 'o', 'k', 'o'] <- p
  INFO    machine:command_cycle Tick: 529 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 533 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 536 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 538 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 30, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 540 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 26, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 26
  INFO    machine:wr_port       OUTPUT: ['W', 'h', 'a', 't', '`', 's', ' ', 'y', 'o', 'u', 'r', ' ', 'n', 'a', 'm', 'e', '?', 'H', 'e', 'l', 'l', 'o', ' ', 'P', 'r', 'o', 'k', 'o', 'p'] <- \n
  INFO    machine:command_cycle Tick: 542 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 27, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *46
  INFO    machine:command_cycle Tick: 546 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 28, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #46 1
  INFO    machine:command_cycle Tick: 549 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 29, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: cmp *46 0
  INFO    machine:command_cycle Tick: 551 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 31, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jz 31
  INFO    machine:command_cycle Tick: 552 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 31, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: hlt
  INFO    machine:simulation    output_buffer: 'What`s your name?Hello Prokop\n'
  