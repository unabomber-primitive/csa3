in_source_text: |-
  section .text
      .print_string: movo !1 *POS
          add #POS 1
          sub #COUNT 1
          cmp #COUNT 0
          jz .exit
          jmp .print_string
      .exit: hlt
in_source_data: |-
  section .data
      WORD: "Hello world!"
      POS: WORD
      COUNT: 12
in_stdin: |

out_code: |
  0 0c30000000140000000f movo !1 *15
  1 0120000000f000000001 add #15 1
  2 02200000010000000001 sub #16 1
  3 09200000010000000000 cmp #16 0
  4 0e000000006000000000 jz 6
  5 0d000000000000000000 jmp 0
  6 15000000000000000000 hlt
out_data: |
  0 00000000011000000000 17
  1 00000000000000000000 0
  2 00000000048000000000 72
  3 00000000065000000000 101
  4 0000000006c000000000 108
  5 0000000006c000000000 108
  6 0000000006f000000000 111
  7 00000000020000000000 32
  8 00000000077000000000 119
  9 0000000006f000000000 111
  10 00000000072000000000 114
  11 0000000006c000000000 108
  12 00000000064000000000 100
  13 00000000021000000000 33
  14 00000000000000000000 0
  15 00000000002000000000 2
  16 0000000000c000000000 12
out_stdout: |
  source LoC: 12 code instr: 7
  ============================================================
  Hello world!
  instr_counter:  71 ticks: 203
out_log: |
  INFO    machine:command_cycle Tick: 0 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: nop
  INFO    machine:wr_port       OUTPUT: [] <- H
  INFO    machine:command_cycle Tick: 2 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 6 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 10 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 13 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 15 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 17 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H'] <- e
  INFO    machine:command_cycle Tick: 19 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 23 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 27 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 30 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 32 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 34 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e'] <- l
  INFO    machine:command_cycle Tick: 36 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 40 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 44 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 47 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 49 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 51 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l'] <- l
  INFO    machine:command_cycle Tick: 53 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 57 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 61 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 64 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 66 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 68 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l'] <- o
  INFO    machine:command_cycle Tick: 70 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 74 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 78 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 81 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 83 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 85 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o'] <-  
  INFO    machine:command_cycle Tick: 87 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 91 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 95 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 98 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 100 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 102 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' '] <- w
  INFO    machine:command_cycle Tick: 104 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 108 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 112 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 115 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 117 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 119 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' ', 'w'] <- o
  INFO    machine:command_cycle Tick: 121 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 125 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 129 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 132 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 134 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 136 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' ', 'w', 'o'] <- r
  INFO    machine:command_cycle Tick: 138 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 142 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 146 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 149 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 151 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 153 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r'] <- l
  INFO    machine:command_cycle Tick: 155 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 159 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 163 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 166 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 168 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 170 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l'] <- d
  INFO    machine:command_cycle Tick: 172 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 176 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 180 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 183 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 185 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 5, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 187 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 0, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: jmp 0
  INFO    machine:wr_port       OUTPUT: ['H', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'] <- !
  INFO    machine:command_cycle Tick: 189 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 1, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: movo !1 *15
  INFO    machine:command_cycle Tick: 193 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 2, rst: 0, rsp: 2047 Flags: N: 0 Z: 0 OF: 0 | Instruction: add #15 1
  INFO    machine:command_cycle Tick: 197 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 3, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: sub #16 1
  INFO    machine:command_cycle Tick: 200 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 4, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: cmp #16 0
  INFO    machine:command_cycle Tick: 202 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 6, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: jz 6
  INFO    machine:command_cycle Tick: 203 | Registers: rax: 0, rbx: 0, rdx: 0, rip: 6, rst: 0, rsp: 2047 Flags: N: 0 Z: 1 OF: 0 | Instruction: hlt
  INFO    machine:simulation    output_buffer: 'Hello world!'
